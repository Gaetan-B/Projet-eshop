{"ast":null,"code":"import { Validators } from \"@angular/forms\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"@angular/router\";\nexport class SignupComponent {\n  constructor(formBuilder, router) {\n    this.formBuilder = formBuilder;\n    this.router = router;\n    this.products = [];\n  }\n  ngOnInit() {\n    this.initForm();\n  }\n  initForm() {\n    this.signUpForm = this.formBuilder.group({\n      email: ['', [Validators.required, Validators.email]],\n      password: ['', [Validators.required, Validators.pattern(/(?=.*[0-9])(?=.*[a-z])(?=.*[A-Z]){5,18}/)]]\n    });\n  }\n  onSubmit() {\n    const email = this.signUpForm.get('email')?.value;\n    const password = this.signUpForm.get('password')?.value;\n    console.log('Email : ' + email);\n    console.log('Mot de passe : ' + password);\n    this.router.navigate([\"/''\"]);\n  }\n}\nSignupComponent.ɵfac = function SignupComponent_Factory(t) {\n  return new (t || SignupComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.Router));\n};\nSignupComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: SignupComponent,\n  selectors: [[\"app-signup\"]],\n  decls: 15,\n  vars: 2,\n  consts: [[1, \"row\"], [1, \"col-sm-8\", \"col-sm-offset-2\"], [3, \"formGroup\", \"ngSubmit\"], [1, \"form-group\"], [\"for\", \"email\"], [\"type\", \"text\", \"id\", \"email\", \"formControlName\", \"email\", 1, \"form-control\"], [\"for\", \"password\"], [\"type\", \"password\", \"id\", \"password\", \"formControlName\", \"password\", 1, \"form-control\"], [\"type\", \"submit\", 1, \"btn\", \"btn-primary\", 3, \"disabled\"]],\n  template: function SignupComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"h2\");\n      i0.ɵɵtext(3, \"Cr\\u00E9er un compte\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(4, \"form\", 2);\n      i0.ɵɵlistener(\"ngSubmit\", function SignupComponent_Template_form_ngSubmit_4_listener() {\n        return ctx.onSubmit();\n      });\n      i0.ɵɵelementStart(5, \"div\", 3)(6, \"label\", 4);\n      i0.ɵɵtext(7, \"Email\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(8, \"input\", 5);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(9, \"div\", 3)(10, \"label\", 6);\n      i0.ɵɵtext(11, \"Mot de passe\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(12, \"input\", 7);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(13, \"button\", 8);\n      i0.ɵɵtext(14, \"Connexion\");\n      i0.ɵɵelementEnd()()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"formGroup\", ctx.signUpForm);\n      i0.ɵɵadvance(9);\n      i0.ɵɵproperty(\"disabled\", ctx.signUpForm.invalid);\n    }\n  },\n  dependencies: [i1.ɵNgNoValidate, i1.DefaultValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.FormGroupDirective, i1.FormControlName],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":"AACA,SAAgCA,UAAU,QAAO,gBAAgB;;;;AAQjE,OAAM,MAAOC,eAAe;EAI1BC,YAAoBC,WAAwB,EACxBC,MAAc;IADd,gBAAW,GAAXD,WAAW;IACX,WAAM,GAANC,MAAM;IAH1B,aAAQ,GAAU,EAAE;EAIpB;EAEFC,QAAQ;IACJ,IAAI,CAACC,QAAQ,EAAE;EACnB;EAEEA,QAAQ;IACN,IAAI,CAACC,UAAU,GAAG,IAAI,CAACJ,WAAW,CAACK,KAAK,CAAE;MACxCC,KAAK,EAAE,CAAC,EAAE,EAAE,CAACT,UAAU,CAACU,QAAQ,EAAEV,UAAU,CAACS,KAAK,CAAC,CAAC;MACpDE,QAAQ,EAAE,CAAC,EAAE,EAAE,CAACX,UAAU,CAACU,QAAQ,EAAEV,UAAU,CAACY,OAAO,CAAC,yCAAyC,CAAC,CAAC;KACpG,CAAC;EACJ;EAEAC,QAAQ;IACN,MAAMJ,KAAK,GAAG,IAAI,CAACF,UAAU,CAACO,GAAG,CAAC,OAAO,CAAC,EAAEC,KAAK;IACjD,MAAMJ,QAAQ,GAAG,IAAI,CAACJ,UAAU,CAACO,GAAG,CAAC,UAAU,CAAC,EAAEC,KAAK;IACvDC,OAAO,CAACC,GAAG,CAAC,UAAU,GAAGR,KAAK,CAAC;IAC/BO,OAAO,CAACC,GAAG,CAAC,iBAAiB,GAAGN,QAAQ,CAAC;IACzC,IAAI,CAACP,MAAM,CAACc,QAAQ,CAAC,CAAC,KAAK,CAAC,CAAC;EAC/B;;AAzBWjB,eAAe;mBAAfA,eAAe;AAAA;AAAfA,eAAe;QAAfA,eAAe;EAAAkB;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MCT5BC,8BAAiB;MAETA,oCAAe;MAAAA,iBAAK;MAExBA,+BAAuD;MAAxBA;QAAA,OAAYC,cAAU;MAAA,EAAC;MACpDD,8BAAwB;MACHA,qBAAK;MAAAA,iBAAQ;MAChCA,2BAA2E;MAC7EA,iBAAM;MACNA,8BAAwB;MACAA,6BAAY;MAAAA,iBAAQ;MAC1CA,4BAAqF;MACvFA,iBAAM;MACNA,kCAA8E;MAAAA,0BAAS;MAAAA,iBAAS;;;MAT5FA,eAAwB;MAAxBA,0CAAwB;MASkBA,eAA+B;MAA/BA,iDAA+B","names":["Validators","SignupComponent","constructor","formBuilder","router","ngOnInit","initForm","signUpForm","group","email","required","password","pattern","onSubmit","get","value","console","log","navigate","selectors","decls","vars","consts","template","i0","ctx"],"sourceRoot":"","sources":["D:\\Cours\\Projet-eshop\\frontend\\src\\app\\security\\component\\signup\\signup.component.ts","D:\\Cours\\Projet-eshop\\frontend\\src\\app\\security\\component\\signup\\signup.component.html"],"sourcesContent":["import {Component, OnInit} from '@angular/core';\nimport {FormBuilder, FormGroup, Validators} from \"@angular/forms\";\nimport {Router} from \"@angular/router\";\n\n@Component({\n  selector: 'app-signup',\n  templateUrl: './signup.component.html',\n  styleUrls: ['./signup.component.scss']\n})\nexport class SignupComponent implements OnInit {\n  signUpForm!: FormGroup;\n  products: any[] = [];\n\n  constructor(private formBuilder: FormBuilder,\n              private router: Router,) {\n  }\n\nngOnInit() {\n    this.initForm();\n}\n\n  initForm() {\n    this.signUpForm = this.formBuilder.group( {\n      email: ['', [Validators.required, Validators.email]],\n      password: ['', [Validators.required, Validators.pattern(/(?=.*[0-9])(?=.*[a-z])(?=.*[A-Z]){5,18}/)]]\n    });\n  }\n\n  onSubmit() {\n    const email = this.signUpForm.get('email')?.value;\n    const password = this.signUpForm.get('password')?.value;\n    console.log('Email : ' + email);\n    console.log('Mot de passe : ' + password);\n    this.router.navigate([\"/''\"]);\n  }\n\n\n\n\n\n}\n","<div class=\"row\">\n  <div class=\"col-sm-8 col-sm-offset-2\">\n    <h2>Créer un compte</h2>\n\n    <form [formGroup]=\"signUpForm\" (ngSubmit)=\"onSubmit()\">\n      <div class=\"form-group\">\n        <label for=\"email\">Email</label>\n        <input type=\"text\" id=\"email\" class=\"form-control\" formControlName=\"email\">\n      </div>\n      <div class=\"form-group\">\n        <label for=\"password\">Mot de passe</label>\n        <input type=\"password\" id=\"password\" class=\"form-control\" formControlName=\"password\">\n      </div>\n      <button class=\"btn btn-primary\" type=\"submit\" [disabled]=\"signUpForm.invalid\">Connexion</button>\n    </form>\n  </div>\n</div>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}